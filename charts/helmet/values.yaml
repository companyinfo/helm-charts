exports:
  defaults:
    ## @section Global parameters
    ## Global Docker image parameters
    ## Please, note that this will override the image parameters, including dependencies, configured to use the global value
    ## Current available global Docker image parameters: imageRegistry, imagePullSecrets and storageClass

    ## @param global.imageRegistry Global Docker image registry
    ## @param global.imagePullSecrets Global Docker registry secret names as an array
    ## @param global.storageClass Global StorageClass for Persistent Volume(s)
    ##
    global:
      imageRegistry: ""
      ## E.g.
      ## imagePullSecrets:
      ##   - myRegistryKeySecretName
      ##
      imagePullSecrets: []
      storageClass: ""

    ## @section Common parameters

    ## @param kubeVersion Force target Kubernetes version (using Helm capabilities if not set)
    ##
    kubeVersion: ""

    ## @param nameOverride String to partially override common.names.fullname template with a string (will maintain the release name)
    ##
    nameOverride: ""

    ## @param fullnameOverride String to fully override common.names.fullname template with a string
    ##
    fullnameOverride: ""

    ## @param namespaceOverride String to fully override common.names.namespace template with a string
    ##
    namespaceOverride: ""

    ## @param clusterDomain Kubernetes Cluster Domain name
    ##
    clusterDomain: cluster.local

    ## @param annotations Additional annotations to be added to the App Deployment or Statefulset. Evaluated as a template
    ##
    annotations: {}

    ## @param labels Additional labels to be added to the App Deployment or Statefulset. Evaluated as a template
    ##
    labels: {}

    ## @param commonLabels Labels to be added to all deployed resources
    ##
    commonLabels: {}

    ## @param commonAnnotations Annotations to be added to all deployed resources
    ##
    commonAnnotations: {}

    ## @section Helmet parameters

    ## Helmet (App) image version
    ## ref: https://kubernetes.io/docs/concepts/containers/images
    ## @param image.registry Image registry
    ## @param image.repository Image repository
    ## @param image.tag Image tag (immutable tags are recommended)
    ## @param image.digest Image digest in the way sha256:aa.... Please note this parameter, if set, will override the tag
    ## @param image.pullPolicy Image pull policy
    ## @param image.pullSecrets Image pull secrets
    ##
    image:
      registry: docker.io
      repository: ""
      tag: latest
      digest: ""

      ## Specify a imagePullPolicy
      ## Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'
      ## ref: https://kubernetes.io/docs/user-guide/images/#pre-pulling-images
      ##
      pullPolicy: null

      ## Optionally specify an array of imagePullSecrets (secrets must be manually created in the namespace)
      ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
      ## Example:
      ## pullSecrets:
      ##   - myRegistryKeySecretName
      ##
      pullSecrets: []

    ## @param replicaCount Number of APP replicas
    ## Note: ReadWriteMany PVCs are required to scale
    ##
    replicaCount: 1

    ## @param revisionHistoryLimit The number of old history to retain to allow rollback
    ##
    revisionHistoryLimit: 10

    ## List of ports to expose from the container.
    ## ref: https://kubernetes.io/docs/concepts/services-networking/connect-applications-service
    ##
    ports:
      - name: http
        containerPort: 8080
        protocol: TCP

    ## Configure extra options for liveness probe
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes
    ## @param livenessProbe.enabled Enable livenessProbe
    ## @param livenessProbe.initialDelaySeconds Initial delay seconds for livenessProbe
    ## @param livenessProbe.periodSeconds Period seconds for livenessProbe
    ## @param livenessProbe.timeoutSeconds Timeout seconds for livenessProbe
    ## @param livenessProbe.failureThreshold Failure threshold for livenessProbe
    ## @param livenessProbe.successThreshold Success threshold for livenessProbe
    ##
    ## Example:
    ## livenessProbe:
    ##   enabled: true
    ##   httpGet:
    ##     path: /
    ##     port: http
    ##     httpHeaders:
    ##       - name: Custom-Header
    ##         value: Awesome
    ##   grpc:
    ##     port: 2379
    ##   tcpSocket:
    ##     port: http
    ##   exec:
    ##     command:
    ##       - cat
    ##       - /tmp/healthy
    ##   initialDelaySeconds: 0
    ##   periodSeconds: 10
    ##   timeoutSeconds: 1
    ##   failureThreshold: 3
    ##   successThreshold: 1
    ##
    livenessProbe:
      enabled: false

    ## Configure extra options for readiness probe
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes
    ## @param readinessProbe.enabled Enable readinessProbe
    ## @param readinessProbe.initialDelaySeconds Initial delay seconds for readinessProbe
    ## @param readinessProbe.periodSeconds Period seconds for readinessProbe
    ## @param readinessProbe.timeoutSeconds Timeout seconds for readinessProbe
    ## @param readinessProbe.failureThreshold Failure threshold for readinessProbe
    ## @param readinessProbe.successThreshold Success threshold for readinessProbe
    ##
    ## Example:
    ## readinessProbe:
    ##   enabled: true
    ##   httpGet:
    ##     path: /
    ##     port: http
    ##     httpHeaders:
    ##       - name: Custom-Header
    ##         value: Awesome
    ##   grpc:
    ##     port: 2379
    ##   tcpSocket:
    ##     port: http
    ##   exec:
    ##     command:
    ##       - cat
    ##       - /tmp/healthy
    ##   initialDelaySeconds: 0
    ##   periodSeconds: 10
    ##   timeoutSeconds: 1
    ##   failureThreshold: 3
    ##   successThreshold: 1
    ##
    readinessProbe:
      enabled: false

    ## Configure extra options for startup probe
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes
    ## @param startupProbe.enabled Enable startupProbe
    ## @param startupProbe.httpGet.path Request path for startupProbe
    ## @param startupProbe.initialDelaySeconds Initial delay seconds for startupProbe
    ## @param startupProbe.periodSeconds Period seconds for startupProbe
    ## @param startupProbe.timeoutSeconds Timeout seconds for startupProbe
    ## @param startupProbe.failureThreshold Failure threshold for startupProbe
    ## @param startupProbe.successThreshold Success threshold for startupProbe
    ##
    ## Example:
    ## startupProbe:
    ##   enabled: true
    ##   httpGet:
    ##     path: /
    ##     port: http
    ##     httpHeaders:
    ##       - name: Custom-Header
    ##         value: Awesome
    ##   grpc:
    ##     port: 2379
    ##   tcpSocket:
    ##     port: http
    ##   exec:
    ##     command:
    ##       - cat
    ##       - /tmp/healthy
    ##   initialDelaySeconds: 0
    ##   periodSeconds: 10
    ##   timeoutSeconds: 1
    ##   failureThreshold: 3
    ##   successThreshold: 1
    ##
    startupProbe:
      enabled: false

    ## Configure pod Restart Policy
    ## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#restart-policy
    ## @param RestartPolicy Restart policy for all containers within the pod
    podRestartPolicy: Always

    ## Configure APP pods Security Context
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
    ## @param podSecurityContext.enabled Enabled APP pods' Security Context
    ## @param podSecurityContext.fsGroup Set APP pod's Security Context fsGroup
    ##
    podSecurityContext:
      enabled: false
      fsGroup: 0

    ## Configure Container Security Context (only main container)
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container
    ## @param containerSecurityContext.enabled Enabled APP containers' Security Context
    ## @param containerSecurityContext.runAsUser Set APP containers' Security Context runAsUser
    ## @param containerSecurityContext.runAsNonRoot Set APP container's Security Context runAsNonRoot
    ##
    containerSecurityContext:
      enabled: false
      runAsUser: 1001
      runAsNonRoot: true

    ## @param lifecycleHooks LifecycleHook to set additional configuration at startup Evaluated as a template
    ##
    lifecycleHooks: {}

    ## APP's resource requests and limits
    ## ref: https://kubernetes.io/docs/user-guide/compute-resources/
    ## We usually recommend not to specify default resources and to leave this as a conscious
    ## choice for the user. This also increases chances charts run on environments with little
    ## resources, such as Minikube. If you do want to specify resources, uncomment the following
    ## lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    ## @param resources.limits The resources limits for the container
    ## @param resources.requests The requested resources for the container
    ##
    resources:
      ## Example:
      ## limits:
      ##    cpu: 100m
      ##    memory: 128Mi
      limits: {}
      ## Examples:
      ## requests:
      ##    cpu: 100m
      ##    memory: 128Mi
      requests: {}

    ## @param hostAliases Add deployment host aliases
    ## https://kubernetes.io/docs/concepts/services-networking/add-entries-to-pod-etc-hosts-with-host-aliases/
    ##
    hostAliases: []

    ## @param podLabels Additional pod labels
    ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
    ##
    podLabels: {}

    ## @param podAnnotations Additional pod annotations
    ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
    ##
    podAnnotations: {}

    ## @param podAffinityPreset Pod affinity preset. Allowed values: soft, hard
    ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
    ##
    podAffinityPreset: ""

    ## @param podAntiAffinityPreset Pod anti-affinity preset. Ignored if `affinity` is set. Allowed values: `soft` or `hard`
    ## Ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
    ##
    podAntiAffinityPreset: soft

    ## Node affinity preset
    ## Ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity
    ## @param nodeAffinityPreset.type Node affinity preset type. Ignored if `affinity` is set. Allowed values: `soft` or `hard`
    ## @param nodeAffinityPreset.key Node label key to match Ignored if `affinity` is set.
    ## @param nodeAffinityPreset.values Node label values to match. Ignored if `affinity` is set.
    ##
    nodeAffinityPreset:
      type: ""
      ## E.g.
      ## key: "kubernetes.io/e2e-az-name"
      ##
      key: ""
      ## E.g.
      ## values:
      ##   - e2e-az1
      ##   - e2e-az2
      ##
      values: []

    ## @param affinity Affinity for pod assignment
    ## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
    ## Note: podAffinityPreset, podAntiAffinityPreset, and  nodeAffinityPreset will be ignored when it's set
    ##
    affinity: {}

    ## @param nodeSelector Node labels for pod assignment.
    ## Ref: https://kubernetes.io/docs/user-guide/node-selection/
    ##
    nodeSelector: {}

    ## @param tolerations Tolerations for pod assignment.
    ## Ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
    ##
    tolerations: []

    ## @param topologySpreadConstraints Topology Spread Constraints for pod assignment spread across your cluster among failure-domains. Evaluated as a template
    ## Ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-topology-spread-constraints/#spread-constraints-for-pods
    ##
    topologySpreadConstraints: []

    ## @param priorityClassName Priority Class Name
    ## ref: https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/#priorityclass
    ##
    priorityClassName: ""

    ## @param schedulerName Use an alternate scheduler, e.g. "stork".
    ## ref: https://kubernetes.io/docs/tasks/administer-cluster/configure-multiple-schedulers/
    ##
    schedulerName: ""

    ## @param terminationGracePeriodSeconds Seconds APP pod needs to terminate gracefully
    ## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod/#termination-of-pods
    ##
    terminationGracePeriodSeconds: ""

    ## @param updateStrategy.type APP deployment strategy type
    ## @param updateStrategy.rollingUpdate APP deployment rolling update configuration parameters
    ## ref: https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#strategy
    ##
    updateStrategy:
      type: RollingUpdate

    ## @param extraVolumes Array to add extra volumes (evaluated as a template)
    ## Example:
    ## extraVolumes:
    ##   - name: vol-conf
    ##     configMap:
    ##       name: "configmap-name"
    ##   - name: vol-secret
    ##     secret:
    ##       secretName: "secret-name"
    ##
    extraVolumes: []

    ## @param extraVolumeMounts Array to add extra mounts (normally used with extraVolumes, evaluated as a template)
    ## Example:
    ## extraVolumeMounts:
    ##   - name: vol-conf
    ##     mountPath: "/app/config"
    ##
    extraVolumeMounts: []

    ## @param sidecars Add additional sidecar containers to the APP pods
    ## Example:
    ## sidecars:
    ##   - name: your-image-name
    ##     image: your-image
    ##     imagePullPolicy: Always
    ##     ports:
    ##       - name: portname
    ##         containerPort: 1234
    ##
    sidecars: []

    ## @param initContainers Add additional init containers to the APP pods
    ## Example:
    ## initContainers:
    ##   - name: your-image-name
    ##     image: your-image
    ##     imagePullPolicy: Always
    ##     ports:
    ##       - name: portname
    ##         containerPort: 1234
    ##
    initContainers: []

    ## @param command Override default container command
    ##
    command: []

    ## @param args Override default container args
    ##
    args: []

    ## @param envVars Environment variables to be set on APP container
    ## Example:
    ## envVars:
    ##   FOO: "foo"
    ##   BAZ:
    ##     valueFrom:
    ##       configMapRef: ...
    ##
    envVars: null

    ## @param envVarsConfigMap ConfigMap with environment variables
    ##
    envVarsConfigMap: ""

    ## @param envVarsSecret Secret with environment variables
    ##
    envVarsSecret: ""

    ## Add an horizontal pod autoscaler
    ## ref: https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/
    ## @param autoscaling.enabled Deploy a HorizontalPodAutoscaler object for the APP deployment
    ## @param autoscaling.minReplicas Minimum number of replicas to scale back
    ## @param autoscaling.maxReplicas Maximum number of replicas to scale out
    ## @param autoscaling.targetCPU Define the CPU target to trigger the scaling actions (utilization percentage)
    ## @param autoscaling.targetMemory Define the memory target to trigger the scaling actions (utilization percentage)
    ## @param autoscaling.metrics [array] Metrics to use when deciding to scale the deployment (evaluated as a template)
    ##
    autoscaling:
      enabled: false
      minReplicas: 3
      maxReplicas: 5
      targetCPU: 80
      targetMemory: 80
      metrics: []

    ## Configure the ConfigMap resource that allows you to store non-confidential data in key-value pairs.
    ## ref: https://kubernetes.io/docs/concepts/configuration/configmap/
    ##
    configMap:
      mounted: false
      mountPath: "/app/config"
      subPath: ""
      ## @param configMap.data store data in key-value pairs
      ##
      ## e.g:
      ## data:
      ##   config.yaml:
      ##     mode: production
      ##   FOO: bar
      ##   DEBUG: true
      ##
      data: {}

      ## @param secret.annotations Additional custom annotations for the ConfigMap
      ##
      annotations: {}

      ## @param secret.labels Additional custom labels for the ConfigMap
      ##
      labels: {}

    ## Configure the Secret resource that allows you to store a small amount of sensitive data such as a password, a token, or a key.
    ## ref: https://kubernetes.io/docs/concepts/configuration/secret
    ##
    secret:
      ## @param secret.type the type is used to facilitate programmatic handling of the Secret data
      type: "Opaque"
      ## @param secret.data store data in key-value pairs
      ##
      ## e.g:
      ## data:
      ##   username: YWRtaW4=
      ##   password: MWYyZDFlMmU2N2Rm
      ##
      data: {}
      ## @param secret.stringData store data in key-value pairs
      ##
      ## e.g:
      ## stringData:
      ##   username: admin
      ##   password: t0p-Secret
      ##
      stringData: {}

      ## @param secret.annotations Additional custom annotations for the Secret
      ##
      annotations: {}

      ## @param secret.labels Additional custom labels for the Secret
      ##
      labels: {}

    ## Configure the ingress resource that allows you to access the APP
    ## ref: https://kubernetes.io/docs/user-guide/ingress/
    ##
    ingress:
      ## @param ingress.enabled Enable ingress resource for the APP
      ##
      enabled: false

      ## @param ingress.path Path for the default host
      ##
      path: /

      ## @param ingress.apiVersion Override API Version (automatically detected if not set)
      ##
      apiVersion: ""

      ## @param ingress.pathType Ingress path type
      ##
      pathType: ImplementationSpecific

      ## @param ingress.hostname Default host for the ingress resource, a host pointing to this will be created
      ##
      hostname: app.local

      ## @param ingress.annotations Additional annotations for the Ingress resource. To enable certificate autogeneration, place here your cert-manager annotations.
      ## For a full list of possible ingress annotations, please see
      ## ref: https://github.com/kubernetes/ingress-nginx/blob/master/docs/user-guide/nginx-configuration/annotations.md
      ## Use this parameter to set the required annotations for cert-manager, see
      ## ref: https://cert-manager.io/docs/usage/ingress/#supported-annotations
      ##
      ## e.g:
      ## annotations:
      ##   kubernetes.io/ingress.class: nginx
      ##   cert-manager.io/cluster-issuer: cluster-issuer-name
      ##
      annotations: {}

      ## @param ingress.ingressClassName Set the ingerssClassName on the ingress record for k8s 1.18+
      ## This is supported in Kubernetes 1.18+ and required if you have more than one IngressClass marked as the default for your cluster .
      ## ref: https://kubernetes.io/blog/2020/04/02/improvements-to-the-ingress-api-in-kubernetes-1.18/
      ##
      ingressClassName: ""

      ## @param ingress.tls Enable TLS configuration for the hostname defined at ingress.hostname parameter
      ## TLS certificates will be retrieved from a TLS secret with name: {{- printf "%s-tls" .Values.ingress.hostname }}
      ## or a custom one if you use the tls.existingSecret parameter
      ## You can use the ingress.secrets parameter to create this TLS secret or relay on cert-manager to create it
      ## Example:
      ## existingSecret: name-of-existing-secret
      ##
      tls: false

      ## @param ingress.extraHosts An array with additional hostname(s) to be covered with the ingress record
      ## Most likely the hostname above will be enough, but in the event more hosts are needed, this is an array
      ## extraHosts:
      ## - name: app.local
      ##   path: /
      extraHosts: []

      ## @param ingress.extraPaths Any additional arbitrary paths that may need to be added to the ingress under the main host.
      ## For example: The ALB ingress controller requires a special rule for handling SSL redirection.
      ## extraPaths:
      ## - path: /*
      ##   backend:
      ##     serviceName: ssl-redirect
      ##     servicePort: use-annotation
      ##
      extraPaths: []

      ## @param ingress.selfSigned Create a TLS secret for this ingress record using self-signed certificates generated by Helm
      ##
      selfSigned: false

      ## @param ingress.extraTls TLS configuration for additional hostname(s) to be covered with this ingress record
      ## see: https://kubernetes.io/docs/concepts/services-networking/ingress/#tls
      ## extraTls:
      ## - hosts:
      ##     - ap.local
      ##   secretName: app.local-tls
      ##
      extraTls: []

      ## @param ingress.secrets If you're providing your own certificates, please use this to add the certificates as secrets
      ## key and certificate should start with -----BEGIN CERTIFICATE----- or
      ## -----BEGIN RSA PRIVATE KEY-----
      ##
      ## name should line up with a tlsSecret set further up
      ## If you're using cert-manager, this is unneeded, as it will create the secret for you if it is not set
      ##
      ## It is also possible to create and manage the certificates outside of this helm chart
      ## Please see README.md for more information
      ## Example:
      ## - name: app.local-tls
      ##   key:
      ##   certificate:
      ##
      secrets: []

      ## @param ingress.existingSecret It is you own the certificate as secret.
      existingSecret: ""

      ## @param ingress.extraRules Additional rules to be covered with this ingress record
      ## ref: https://kubernetes.io/docs/concepts/services-networking/ingress/#ingress-rules
      ## e.g:
      ## extraRules:
      ## - host: example.local
      ##     http:
      ##       path: /
      ##       backend:
      ##         service:
      ##           name: example-svc
      ##           port:
      ##             name: http
      ##
      extraRules: []

    ## APP service parameters
    ##
    service:
      ## @param service.type APP service type
      ##
      type: ClusterIP

      ## @param service.ports APP service ports
      ##
      ports:
        - name: http
          protocol: TCP
          port: 80
          targetPort: http

      ## @param service.sessionAffinity Control where client requests go, to the same pod or round-robin
      ## Values: ClientIP or None
      ## ref: https://kubernetes.io/docs/user-guide/services/
      ##
      sessionAffinity: None

      ## @param service.clusterIP APP service Cluster IP
      ## e.g.:
      ## clusterIP: None
      ##
      clusterIP: ""

      ## @param service.loadBalancerIP APP service Load Balancer IP
      ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#type-loadbalancer
      ##
      loadBalancerIP: ""

      ## @param service.loadBalancerSourceRanges APP service Load Balancer sources
      ## ref: https://kubernetes.io/docs/tasks/access-application-cluster/configure-cloud-provider-firewall/#restrict-access-for-loadbalancer-service
      ## e.g:
      ## loadBalancerSourceRanges:
      ##   - 10.10.10.0/24
      ##
      loadBalancerSourceRanges: []

      ## @param service.externalTrafficPolicy APP service external traffic policy
      ## ref https://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/#preserving-the-client-source-ip
      ##
      externalTrafficPolicy: Cluster

      ## @param service.annotations Additional custom annotations for APP service
      ##
      annotations: {}

    ## Prometheus Operator ServiceMonitor configuration
    ##
    serviceMonitor:
      ## @param serviceMonitor.enabled Specify if a ServiceMonitor will be deployed for Prometheus Operator
      ##
      enabled: false

      ## @param serviceMonitor.namespace Namespace in which Prometheus is running
      ##
      namespace: ""

      ## @param serviceMonitor.labels Additional ServiceMonitor labels (evaluated as a template)
      ##
      labels: {}

      ## @param serviceMonitor.annotations Additional ServiceMonitor annotations (evaluated as a template)
      ##
      annotations: {}

      ## @param serviceMonitor.jobLabel The name of the label on the target service to use as the job name in Prometheus
      ##
      jobLabel: ""

      ## @param serviceMonitor.honorLabels honorLabels chooses the metric's labels on collisions with target labels
      ##
      honorLabels: false

      ## @param serviceMonitor.interval How frequently to scrape metrics
      ## e.g:
      ## interval: 10s
      ##
      interval: ""

      ## @param serviceMonitor.scrapeTimeout Timeout after which the scrape is ended
      ## e.g:
      ## scrapeTimeout: 10s
      ##
      scrapeTimeout: ""

      ## @param serviceMonitor.metricRelabelings [array] Specify additional relabeling of metrics
      ##
      metricRelabelings: []

      ## @param serviceMonitor.relabelings [array] Specify general relabeling
      ##
      relabelings: []

      ## @param serviceMonitor.selector Prometheus instance selector labels
      ## ref: https://github.com/bitnami/charts/tree/master/bitnami/prometheus-operator#prometheus-configuration
      ##
      selector: {}

      ## @param serviceMonitor.namespaceSelector is a selector for selecting either all namespaces or a list of namespaces.
      ##
      namespaceSelector: {}

      ## @param serviceMonitor.port port used by serviceMonitor
      ##
      port: "http"

      ## @param serviceMonitor.path path used by serviceMonitor
      ##
      path: "/metrics"

    ## Service account for APP pods to use.
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/
    ##
    serviceAccount:
      ## @param serviceAccount.create Enable creation of ServiceAccount for APP pods
      ##
      create: false

      ## @param serviceAccount.name The name of the ServiceAccount to use.
      ## If not set and create is true, a name is generated using the common.names.fullname template
      ##
      name: ""

      ## @param serviceAccount.automountServiceAccountToken Allows auto mount of ServiceAccountToken on the serviceAccount created
      ## Can be set to false if pods using this serviceAccount do not need to use K8s API
      ##
      automountServiceAccountToken: true

      ## @param serviceAccount.annotations Additional custom annotations for the ServiceAccount
      ##
      annotations: {}

      ## @param serviceAccount.labels Additional custom labels for the ServiceAccount
      ##
      labels: {}
